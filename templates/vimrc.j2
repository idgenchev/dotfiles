{{ ansible_managed | comment(decoration="\" ") }}

" Don't try to be vi compatible
set nocompatible

" Helps force plugins to load correctly when it is turned back on below
filetype off

" Turn on syntax highlighting
syntax on

" For plugins to load correctly
filetype plugin indent on

" TODO: Pick a leader key
" let mapleader = ","

" Security
set modelines=0

" Show line numbers
set number

" Show file stats
set ruler

" Blink cursor on error instead of beeping (grr)
set visualbell

" Encoding
set encoding=utf-8

" Whitespace
set wrap
set textwidth=79
set formatoptions=tcqrn1
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set noshiftround

" Cursor motion
set scrolloff=3
set backspace=indent,eol,start
set matchpairs+=<:> " use % to jump between pairs
runtime! macros/matchit.vim

" Move up/down editor lines
nnoremap j gj
nnoremap k gk

" Allow hidden buffers
set hidden

" Rendering
set ttyfast

" Status bar
set laststatus=2

" Last line
set showmode
set showcmd

" Searching
nnoremap / /\v
vnoremap / /\v
set hlsearch
set incsearch
set ignorecase
set smartcase
set showmatch
map <leader><space> :let @/=''<cr> " clear search

" Remap help key.
inoremap <F1> <ESC>:set invfullscreen<CR>a
nnoremap <F1> :set invfullscreen<CR>
vnoremap <F1> :set invfullscreen<CR>

" Textmate holdouts

" Formatting
map <leader>q gqip

" Visualize tabs and newlines
set listchars=tab:▸\ ,eol:¬
" Uncomment this to enable by default:
" set list " To enable by default
" Or use your leader key + l to toggle on/off
map <leader>l :set list!<CR> " Toggle tabs and EOL

" Color scheme (terminal)
set t_Co=256
set background=dark
let g:solarized_termcolors=256
let g:solarized_termtrans=1
" put https://raw.github.com/altercation/vim-colors-solarized/master/colors/solarized.vim
" in ~/.vim/colors/ and uncomment:
" colorscheme solarized

" Start NERDTree and leave the cursor in it.
autocmd VimEnter * NERDTree

" Open the completion menu, even if there's only a single item
set completeopt=longest,menuone

" Select completion item with Enter
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"

" Enable folding
set foldmethod=indent
set foldlevel=99

" Enable folding with the spacebar
nnoremap <space> za

" Highlight trailing spaces
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

" Remove trailing whitespace on save
autocmd BufWritePre *{.tf,.tfvars,.go,.py,.c,.cpp,.h,.sh,BUILD} %s/\s\+$//e

" vim-terraform
let g:terraform_align=1
let g:terraform_fmt_on_save=1

" format with goimports instead of gofmt
let g:go_fmt_command = "goimports"

" Write swap files to ~/vimtmp
set directory=~/vimtmp//,.

" Backup files
set backupdir=~/vimbackups//,.
au BufWritePre * let &bex = '-' . strftime("%Y%m%d-%H%M%S") . '.vimbackup'

" Enable fzf file search
set rtp+=~/.fzf

" vim-plug plugins
call plug#begin('~/.vim/plugged')

Plug 'python-mode/python-mode', { 'for': 'python' }
Plug 'python-rope/ropevim'

Plug 'Valloric/YouCompleteMe', { 'do': './install.py' }

Plug 'mileszs/ack.vim'

Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

Plug 'jiangmiao/auto-pairs'

Plug 'tsandall/vim-rego'

call plug#end()

" Airline theme
let g:airline_powerline_fonts=1
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

" unicode symbols
let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.whitespace = 'Ξ'

" airline symbols
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''

let g:airline_theme='powerlineish'

au BufRead,BufNewFile BUILD,*.build_def set filetype=please
au BufRead,BufNewFile BUILD,*.build_def,*.build_defs set syntax=python

nmap ; :ls<CR>:b<Space>

if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif

nmap f :F<CR>

map <C-o> :NERDTree %<CR>

colorscheme industry

if has("gui_macvim")
  set guifont=MonacoForPowerline:h13
endif

" Highlight current line and column
set cursorline
set cursorcolumn
hi cursorline cterm=none term=none
autocmd WinEnter * setlocal cursorline
autocmd WinLeave * setlocal nocursorline
highlight CursorLine guibg=#000000 ctermbg=236
highlight CursorColumn guibg=#000000 ctermbg=236

" Make all splits to happen below
set splitbelow

" open terminal below all splits
cabbrev bterm bo term

" Default term size
if exists("termwinsize")
  set termwinsize=15x0
elif exists("termsize")
  set termsize=15x0
endif

set directory^=$HOME/.vim/swap//

set tabstop=4

set mouse=a

